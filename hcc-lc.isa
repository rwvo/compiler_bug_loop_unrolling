AMD HSA Code Object
  Version 2.1
ISA
  Vendor AMD  Arch AMDGPU  Version 8:0:3

Segments (total 3):
  Segment (1)
    Type: UNKNOWN (1)     Flags: 0x00000004
    Image Size: 642     Memory Size: 642     Align: 4096     VAddr: 0
  Segment (2)
    Type: UNKNOWN (1)     Flags: 0x00000005
    Image Size: 1852     Memory Size: 1852     Align: 4096     VAddr: 4096
  Segment (3)
    Type: UNKNOWN (1)     Flags: 0x00000006
    Image Size: 96     Memory Size: 96     Align: 4096     VAddr: 8192

Data Sections (total 2):
  Section .AMDGPU.config (Index 7)
    Type: 1     Flags: 0x00000000
    Size:  0     Address: 0     Align: 0
    Data:
  Section .comment (Index 8)
    Type: 1     Flags: 0x00000030
    Size:  82     Address: 0     Align: 1
    Data:
      0000000: 0048 4343 2063 6c61 6e67 2076 6572 7369  .HCC clang versi
      0000010: 6f6e 2033 2e35 2e30 2020 2862 6173 6564  on 3.5.0  (based
      0000020: 206f 6e20 4843 4320 302e 3130 2e31 3633   on HCC 0.10.163
      0000030: 3133 2d64 3930 3733 3861 2d31 3037 3034  13-d90738a-10704
      0000040: 6634 204c 4c56 4d20 332e 352e 3073 766e  f4 LLVM 3.5.0svn
      0000050: 2900 0000 0000 0000 0000 0000 0000 0000  ).

Relocation Sections (total 0):

Symbols (total 1):
  Symbol ZZ19matmul_sq_gpu_tiledPKfS0_PfmEN3_EC__019__cxxamp_trampolineEmS1_iiiiiiiiiiiiiS1_iiiiiiiiiiiiiS1_iiiiiiiiiiiii (Index 4):
    Section: .text     Section Offset: 0
    VAddr: 4096     Size: 1852     Alignment: 256
    Kind: KERNEL     Linkage: PROGRAM     Definition: TRUE

AMD Kernel Code for ZZ19matmul_sq_gpu_tiledPKfS0_PfmEN3_EC__019__cxxamp_trampolineEmS1_iiiiiiiiiiiiiS1_iiiiiiiiiiiiiS1_iiiiiiiiiiiii: 
  amd_kernel_code_version_major                                = 1
  amd_kernel_code_version_minor                                = 0
  amd_machine_kind                                             = AMDGPU
  amd_machine_version_major                                    = 8
  amd_machine_version_minor                                    = 0
  amd_machine_version_stepping                                 = 3
  kernel_code_entry_byte_offset                                = 256
  max_scratch_backing_memory_byte_size                         = 0
  COMPUTE_PGM_RSRC1 (0x2c00e200):
    granulated_workitem_vgpr_count                             = 34
    granulated_wavefront_sgpr_count                            = 3
    priority                                                   = 0
    float_round_mode_32                                        = NEAREST_EVEN
    float_round_mode_16_64                                     = NEAREST_EVEN
    float_denorm_mode_32                                       = FLUSH_SOURCE_OUTPUT
    float_denorm_mode_16_64                                    = FLUSH_NONE
    enable_dx10_clamp                                          = TRUE
  COMPUTE_PGM_RSRC2 (0x80990000):
    user_sgpr_count                                            = 8
    enable_sgpr_workgroup_id_x                                 = TRUE
    enable_sgpr_workgroup_id_y                                 = TRUE
    enable_vgpr_workitem_id                                    = X, Y
    granulated_lds_size                                        = 16
  KERNEL_CODE_PROPERTIES (0xa000b000):
    enable_sgpr_private_segment_buffer                         = TRUE
    enable_sgpr_dispatch_ptr                                   = TRUE
    enable_sgpr_kernarg_segment_ptr                            = TRUE
    private_element_size                                       = DWORD (4 bytes)
    is_ptr64                                                   = TRUE
  workgroup_group_segment_byte_size                            = 8192
  kernarg_segment_byte_size                                    = 196
  wavefront_sgpr_count                                         = 30
  workitem_vgpr_count                                          = 137
  kernarg_segment_alignment                                    = 16 (4)
  group_segment_alignment                                      = 16 (4)
  private_segment_alignment                                    = 16 (4)
  wavefront_size                                               = 64 (6)

Disassembly:
  asic(VI)
  type(CS)
  
  //
  // amd_kernel_code_t for ZZ19matmul_sq_gpu_tiledPKfS0_PfmEN3_EC__019__cxxamp_trampolineEmS1_iiiiiiiiiiiiiS1_iiiiiiiiiiiiiS1_iiiiiiiiiiiii (000000000000 - 000000000100)
  //
  //
  // ZZ19matmul_sq_gpu_tiledPKfS0_PfmEN3_EC__019__cxxamp_trampolineEmS1_iiiiiiiiiiiiiS1_iiiiiiiiiiiiiS1_iiiiiiiiiiiii:
  //
  s_load_dword  s12, s[4:5], 0x04                       // 000000000100: C0020302 00000004
  s_load_dwordx2  s[0:1], s[6:7], 0x00                  // 000000000108: C0060003 00000000
  s_load_dword  s10, s[6:7], 0xc0                       // 000000000110: C0020283 000000C0
  s_load_dwordx2  s[2:3], s[6:7], 0x88                  // 000000000118: C0060083 00000088
  s_load_dword  s4, s[6:7], 0xa8                        // 000000000120: C0020103 000000A8
  s_load_dword  s11, s[6:7], 0xb0                       // 000000000128: C00202C3 000000B0
  s_load_dword  s5, s[6:7], 0xb8                        // 000000000130: C0020143 000000B8
  s_waitcnt     lgkmcnt(0)                              // 000000000138: BF8C007F
  s_lshr_b32    s13, s12, 16                            // 00000000013C: 8F0D900C
  s_mul_i32     s9, s9, s13                             // 000000000140: 92090D09
  v_add_u32     v2, vcc, s9, v1                         // 000000000144: 32040209
  s_and_b32     s9, s12, 0x0000ffff                     // 000000000148: 8609FF0C 0000FFFF
  v_cmp_eq_i64  s[12:13], 0, s[0:1]                     // 000000000150: D0E2000C 00000080
  s_mul_i32     s8, s8, s9                              // 000000000158: 92080908
  v_mov_b32     v26, 0                                  // 00000000015C: 7E340280
  s_and_b64     vcc, exec, s[12:13]                     // 000000000160: 86EA0C7E
  s_cbranch_vccnz  label_01BC                           // 000000000164: BF870162
  s_load_dword  s22, s[6:7], 0x70                       // 000000000168: C0020583 00000070
  s_load_dword  s15, s[6:7], 0x30                       // 000000000170: C00203C3 00000030
  s_load_dword  s20, s[6:7], 0x68                       // 000000000178: C0020503 00000068
  s_load_dword  s9, s[6:7], 0x28                        // 000000000180: C0020243 00000028
  s_load_dword  s23, s[6:7], 0x78                       // 000000000188: C00205C3 00000078
  v_lshlrev_b32  v6, 7, v1                              // 000000000190: 240C0287
  s_waitcnt     lgkmcnt(0)                              // 000000000194: BF8C007F
  v_add_u32     v1, vcc, s22, v1                        // 000000000198: 32020216
  s_load_dword  s18, s[6:7], 0x38                       // 00000000019C: C0020483 00000038
  s_load_dword  s14, s[6:7], 0x40                       // 0000000001A4: C0020383 00000040
  v_add_u32     v3, vcc, s15, v2                        // 0000000001AC: 3206040F
  s_load_dwordx2  s[12:13], s[6:7], 0x08                // 0000000001B0: C0060303 00000008
  s_load_dwordx2  s[16:17], s[6:7], 0x48                // 0000000001B8: C0060403 00000048
  s_load_dword  s6, s[6:7], 0x80                        // 0000000001C0: C0020183 00000080
  v_mul_lo_u32  v1, s20, v1                             // 0000000001C8: D2850001 00020214
  v_mul_lo_u32  v24, v3, s9                             // 0000000001D0: D2850018 00001303
  v_add_u32     v25, vcc, s23, v0                       // 0000000001D8: 32320017
  v_add_u32     v4, vcc, 0x00001000, v6                 // 0000000001DC: 32080CFF 00001000
  v_lshlrev_b32  v3, 2, v0                              // 0000000001E4: 24060082
  v_add_u32     v25, vcc, v25, v1                       // 0000000001E8: 32320319
  s_waitcnt     lgkmcnt(0)                              // 0000000001EC: BF8C007F
  v_add_u32     v1, vcc, s18, v0                        // 0000000001F0: 32020012
  v_mov_b32     v72, s1                                 // 0000000001F4: 7E900201
  v_add_u32     v1, vcc, v1, v24                        // 0000000001F8: 32023101
  s_ashr_i32    s19, s14, 31                            // 0000000001FC: 90139F0E
  v_add_u32     v5, vcc, v3, v4                         // 000000000200: 320A0903
  s_ashr_i32    s21, s6, 31                             // 000000000204: 90159F06
  v_add_u32     v6, vcc, v3, v6                         // 000000000208: 320C0D03
  v_or_b32      v7, 4, v4                               // 00000000020C: 280E0884
  v_add_u32     v8, vcc, 0x00000080, v3                 // 000000000210: 321006FF 00000080
  v_or_b32      v9, 8, v4                               // 000000000218: 28120888
  v_add_u32     v10, vcc, 0x00000100, v3                // 00000000021C: 321406FF 00000100
  v_or_b32      v11, 12, v4                             // 000000000224: 2816088C
  v_add_u32     v12, vcc, 0x00000180, v3                // 000000000228: 321806FF 00000180
  v_or_b32      v13, 16, v4                             // 000000000230: 281A0890
  v_add_u32     v14, vcc, 0x00000200, v3                // 000000000234: 321C06FF 00000200
  v_or_b32      v15, 20, v4                             // 00000000023C: 281E0894
  v_add_u32     v16, vcc, 0x00000280, v3                // 000000000240: 322006FF 00000280
  v_or_b32      v17, 24, v4                             // 000000000248: 28220898
  v_add_u32     v18, vcc, 0x00000300, v3                // 00000000024C: 322406FF 00000300
  v_or_b32      v19, 28, v4                             // 000000000254: 2826089C
  v_add_u32     v20, vcc, 0x00000380, v3                // 000000000258: 322806FF 00000380
  v_or_b32      v21, 32, v4                             // 000000000260: 282A08A0
  v_add_u32     v22, vcc, 0x00000400, v3                // 000000000264: 322C06FF 00000400
  v_or_b32      v23, 36, v4                             // 00000000026C: 282E08A4
  v_add_u32     v24, vcc, 0x00000480, v3                // 000000000270: 323006FF 00000480
  v_add_u32     v25, vcc, s8, v25                       // 000000000278: 32323208
  s_lshl_b32    s7, s20, 5                              // 00000000027C: 8E078514
  v_or_b32      v27, 40, v4                             // 000000000280: 283608A8
  v_add_u32     v28, vcc, 0x00000500, v3                // 000000000284: 323806FF 00000500
  v_or_b32      v29, 44, v4                             // 00000000028C: 283A08AC
  v_add_u32     v30, vcc, 0x00000580, v3                // 000000000290: 323C06FF 00000580
  v_or_b32      v31, 48, v4                             // 000000000298: 283E08B0
  v_add_u32     v32, vcc, 0x00000600, v3                // 00000000029C: 324006FF 00000600
  v_or_b32      v33, 52, v4                             // 0000000002A4: 284208B4
  v_add_u32     v34, vcc, 0x00000680, v3                // 0000000002A8: 324406FF 00000680
  v_or_b32      v35, 56, v4                             // 0000000002B0: 284608B8
  v_add_u32     v36, vcc, 0x00000700, v3                // 0000000002B4: 324806FF 00000700
  v_or_b32      v37, 60, v4                             // 0000000002BC: 284A08BC
  v_add_u32     v38, vcc, 0x00000780, v3                // 0000000002C0: 324C06FF 00000780
  v_or_b32      v39, 64, v4                             // 0000000002C8: 284E08C0
  v_add_u32     v40, vcc, 0x00000800, v3                // 0000000002CC: 325006FF 00000800
  v_or_b32      v41, 0x00000044, v4                     // 0000000002D4: 285208FF 00000044
  v_add_u32     v42, vcc, 0x00000880, v3                // 0000000002DC: 325406FF 00000880
  v_or_b32      v43, 0x00000048, v4                     // 0000000002E4: 285608FF 00000048
  v_add_u32     v44, vcc, 0x00000900, v3                // 0000000002EC: 325806FF 00000900
  v_or_b32      v45, 0x0000004c, v4                     // 0000000002F4: 285A08FF 0000004C
  v_add_u32     v46, vcc, 0x00000980, v3                // 0000000002FC: 325C06FF 00000980
  v_or_b32      v47, 0x00000050, v4                     // 000000000304: 285E08FF 00000050
  v_add_u32     v48, vcc, 0x00000a00, v3                // 00000000030C: 326006FF 00000A00
  v_or_b32      v49, 0x00000054, v4                     // 000000000314: 286208FF 00000054
  v_add_u32     v50, vcc, 0x00000a80, v3                // 00000000031C: 326406FF 00000A80
  v_or_b32      v51, 0x00000058, v4                     // 000000000324: 286608FF 00000058
  v_add_u32     v52, vcc, 0x00000b00, v3                // 00000000032C: 326806FF 00000B00
  v_or_b32      v53, 0x0000005c, v4                     // 000000000334: 286A08FF 0000005C
  v_add_u32     v54, vcc, 0x00000b80, v3                // 00000000033C: 326C06FF 00000B80
  v_or_b32      v55, 0x00000060, v4                     // 000000000344: 286E08FF 00000060
  v_add_u32     v56, vcc, 0x00000c00, v3                // 00000000034C: 327006FF 00000C00
  v_or_b32      v57, 0x00000064, v4                     // 000000000354: 287208FF 00000064
  v_add_u32     v58, vcc, 0x00000c80, v3                // 00000000035C: 327406FF 00000C80
  v_or_b32      v59, 0x00000068, v4                     // 000000000364: 287608FF 00000068
  v_add_u32     v60, vcc, 0x00000d00, v3                // 00000000036C: 327806FF 00000D00
  v_or_b32      v61, 0x0000006c, v4                     // 000000000374: 287A08FF 0000006C
  v_add_u32     v62, vcc, 0x00000d80, v3                // 00000000037C: 327C06FF 00000D80
  v_or_b32      v63, 0x00000070, v4                     // 000000000384: 287E08FF 00000070
  v_add_u32     v64, vcc, 0x00000e00, v3                // 00000000038C: 328006FF 00000E00
  v_or_b32      v65, 0x00000074, v4                     // 000000000394: 288208FF 00000074
  v_add_u32     v66, vcc, 0x00000e80, v3                // 00000000039C: 328406FF 00000E80
  v_or_b32      v67, 0x00000078, v4                     // 0000000003A4: 288608FF 00000078
  v_add_u32     v68, vcc, 0x00000f00, v3                // 0000000003AC: 328806FF 00000F00
  v_or_b32      v69, 0x0000007c, v4                     // 0000000003B4: 288A08FF 0000007C
  v_add_u32     v70, vcc, 0x00000f80, v3                // 0000000003BC: 328C06FF 00000F80
  v_mov_b32     v26, 0                                  // 0000000003C4: 7E340280
  v_mov_b32     v71, s0                                 // 0000000003C8: 7E8E0200
  s_mov_b32     m0, -1                                  // 0000000003CC: BEFC00C1
  label_00F4:
  v_ashrrev_i32  v74, 31, v1                            // 0000000003D0: 2294029F
  v_add_u32     v73, vcc, s14, v1                       // 0000000003D4: 3292020E
  v_mov_b32     v75, s19                                // 0000000003D8: 7E960213
  v_addc_u32    v74, vcc, v75, v74, vcc                 // 0000000003DC: 3894954B
  v_lshlrev_b64  v[73:74], 2, v[73:74]                  // 0000000003E0: D28F0049 00029282
  v_mov_b32     v76, s13                                // 0000000003E8: 7E98020D
  v_add_u32     v75, vcc, s12, v73                      // 0000000003EC: 3296920C
  v_addc_u32    v76, vcc, v74, v76, vcc                 // 0000000003F0: 3898994A
  flat_load_dword  v77, v[75:76]                        // 0000000003F4: DC500000 4D00004B
  v_ashrrev_i32  v74, 31, v25                           // 0000000003FC: 2294329F
  v_mov_b32     v75, s21                                // 000000000400: 7E960215
  v_add_u32     v73, vcc, s6, v25                       // 000000000404: 32923206
  v_addc_u32    v74, vcc, v75, v74, vcc                 // 000000000408: 3894954B
  v_lshlrev_b64  v[73:74], 2, v[73:74]                  // 00000000040C: D28F0049 00029282
  v_mov_b32     v76, s17                                // 000000000414: 7E980211
  v_add_u32     v75, vcc, s16, v73                      // 000000000418: 32969210
  v_addc_u32    v76, vcc, v74, v76, vcc                 // 00000000041C: 3898994A
  v_add_u32     v71, vcc, -1, v71                       // 000000000420: 328E8EC1
  v_addc_u32    v72, vcc, -1, v72, vcc                  // 000000000424: 389090C1
  v_cmp_ne_i64  s[0:1], 0, v[71:72]                     // 000000000428: D0E50000 00028E80
  v_add_u32     v25, vcc, s7, v25                       // 000000000430: 32323207
  v_add_u32     v1, vcc, 32, v1                         // 000000000434: 320202A0
  s_and_b64     vcc, exec, s[0:1]                       // 000000000438: 86EA007E
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000043C: BF8C0070
  ds_write_b32  v5, v77                                 // 000000000440: D81A0000 00004D05
  flat_load_dword  v73, v[75:76]                        // 000000000448: DC500000 4900004B
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000450: BF8C0070
  ds_write_b32  v6, v73                                 // 000000000454: D81A0000 00004906
  s_waitcnt     lgkmcnt(0)                              // 00000000045C: BF8C007F
  s_barrier                                             // 000000000460: BF8A0000
  ds_read_b32   v73, v4                                 // 000000000464: D86C0000 49000004
  ds_read_b32   v74, v3                                 // 00000000046C: D86C0000 4A000003
  ds_read_b32   v75, v7                                 // 000000000474: D86C0000 4B000007
  ds_read_b32   v76, v8                                 // 00000000047C: D86C0000 4C000008
  ds_read_b32   v77, v9                                 // 000000000484: D86C0000 4D000009
  ds_read_b32   v78, v10                                // 00000000048C: D86C0000 4E00000A
  ds_read_b32   v79, v11                                // 000000000494: D86C0000 4F00000B
  ds_read_b32   v80, v12                                // 00000000049C: D86C0000 5000000C
  ds_read_b32   v81, v13                                // 0000000004A4: D86C0000 5100000D
  ds_read_b32   v82, v14                                // 0000000004AC: D86C0000 5200000E
  ds_read_b32   v83, v15                                // 0000000004B4: D86C0000 5300000F
  ds_read_b32   v84, v16                                // 0000000004BC: D86C0000 54000010
  ds_read_b32   v85, v17                                // 0000000004C4: D86C0000 55000011
  ds_read_b32   v86, v18                                // 0000000004CC: D86C0000 56000012
  ds_read_b32   v87, v19                                // 0000000004D4: D86C0000 57000013
  ds_read_b32   v88, v20                                // 0000000004DC: D86C0000 58000014
  ds_read_b32   v89, v21                                // 0000000004E4: D86C0000 59000015
  ds_read_b32   v90, v22                                // 0000000004EC: D86C0000 5A000016
  ds_read_b32   v91, v23                                // 0000000004F4: D86C0000 5B000017
  ds_read_b32   v92, v24                                // 0000000004FC: D86C0000 5C000018
  ds_read_b32   v93, v27                                // 000000000504: D86C0000 5D00001B
  ds_read_b32   v94, v28                                // 00000000050C: D86C0000 5E00001C
  ds_read_b32   v95, v29                                // 000000000514: D86C0000 5F00001D
  ds_read_b32   v96, v30                                // 00000000051C: D86C0000 6000001E
  ds_read_b32   v97, v31                                // 000000000524: D86C0000 6100001F
  ds_read_b32   v98, v32                                // 00000000052C: D86C0000 62000020
  ds_read_b32   v99, v33                                // 000000000534: D86C0000 63000021
  ds_read_b32   v100, v34                               // 00000000053C: D86C0000 64000022
  ds_read_b32   v101, v35                               // 000000000544: D86C0000 65000023
  ds_read_b32   v102, v36                               // 00000000054C: D86C0000 66000024
  ds_read_b32   v103, v37                               // 000000000554: D86C0000 67000025
  ds_read_b32   v104, v38                               // 00000000055C: D86C0000 68000026
  ds_read_b32   v105, v39                               // 000000000564: D86C0000 69000027
  ds_read_b32   v106, v40                               // 00000000056C: D86C0000 6A000028
  ds_read_b32   v107, v41                               // 000000000574: D86C0000 6B000029
  ds_read_b32   v108, v42                               // 00000000057C: D86C0000 6C00002A
  ds_read_b32   v109, v43                               // 000000000584: D86C0000 6D00002B
  ds_read_b32   v110, v44                               // 00000000058C: D86C0000 6E00002C
  ds_read_b32   v111, v45                               // 000000000594: D86C0000 6F00002D
  ds_read_b32   v112, v46                               // 00000000059C: D86C0000 7000002E
  ds_read_b32   v113, v47                               // 0000000005A4: D86C0000 7100002F
  ds_read_b32   v114, v48                               // 0000000005AC: D86C0000 72000030
  ds_read_b32   v115, v49                               // 0000000005B4: D86C0000 73000031
  ds_read_b32   v116, v50                               // 0000000005BC: D86C0000 74000032
  ds_read_b32   v117, v51                               // 0000000005C4: D86C0000 75000033
  ds_read_b32   v118, v52                               // 0000000005CC: D86C0000 76000034
  ds_read_b32   v119, v53                               // 0000000005D4: D86C0000 77000035
  ds_read_b32   v120, v54                               // 0000000005DC: D86C0000 78000036
  ds_read_b32   v121, v55                               // 0000000005E4: D86C0000 79000037
  ds_read_b32   v122, v56                               // 0000000005EC: D86C0000 7A000038
  ds_read_b32   v123, v57                               // 0000000005F4: D86C0000 7B000039
  ds_read_b32   v124, v58                               // 0000000005FC: D86C0000 7C00003A
  ds_read_b32   v125, v59                               // 000000000604: D86C0000 7D00003B
  ds_read_b32   v126, v60                               // 00000000060C: D86C0000 7E00003C
  ds_read_b32   v127, v61                               // 000000000614: D86C0000 7F00003D
  ds_read_b32   v128, v62                               // 00000000061C: D86C0000 8000003E
  ds_read_b32   v129, v63                               // 000000000624: D86C0000 8100003F
  ds_read_b32   v130, v64                               // 00000000062C: D86C0000 82000040
  ds_read_b32   v131, v65                               // 000000000634: D86C0000 83000041
  ds_read_b32   v132, v66                               // 00000000063C: D86C0000 84000042
  ds_read_b32   v133, v67                               // 000000000644: D86C0000 85000043
  ds_read_b32   v134, v68                               // 00000000064C: D86C0000 86000044
  ds_read_b32   v135, v69                               // 000000000654: D86C0000 87000045
  ds_read_b32   v136, v70                               // 00000000065C: D86C0000 88000046
  s_waitcnt     lgkmcnt(0)                              // 000000000664: BF8C007F
  s_barrier                                             // 000000000668: BF8A0000
  v_mac_f32     v26, v74, v73                           // 00000000066C: 2C34934A
  v_mac_f32     v26, v76, v75                           // 000000000670: 2C34974C
  v_mac_f32     v26, v78, v77                           // 000000000674: 2C349B4E
  v_mac_f32     v26, v80, v79                           // 000000000678: 2C349F50
  v_mac_f32     v26, v82, v81                           // 00000000067C: 2C34A352
  v_mac_f32     v26, v84, v83                           // 000000000680: 2C34A754
  v_mac_f32     v26, v86, v85                           // 000000000684: 2C34AB56
  v_mac_f32     v26, v88, v87                           // 000000000688: 2C34AF58
  v_mac_f32     v26, v90, v89                           // 00000000068C: 2C34B35A
  v_mac_f32     v26, v92, v91                           // 000000000690: 2C34B75C
  v_mac_f32     v26, v94, v93                           // 000000000694: 2C34BB5E
  v_mac_f32     v26, v96, v95                           // 000000000698: 2C34BF60
  v_mac_f32     v26, v98, v97                           // 00000000069C: 2C34C362
  v_mac_f32     v26, v100, v99                          // 0000000006A0: 2C34C764
  v_mac_f32     v26, v102, v101                         // 0000000006A4: 2C34CB66
  v_mac_f32     v26, v104, v103                         // 0000000006A8: 2C34CF68
  v_mac_f32     v26, v106, v105                         // 0000000006AC: 2C34D36A
  v_mac_f32     v26, v108, v107                         // 0000000006B0: 2C34D76C
  v_mac_f32     v26, v110, v109                         // 0000000006B4: 2C34DB6E
  v_mac_f32     v26, v112, v111                         // 0000000006B8: 2C34DF70
  v_mac_f32     v26, v114, v113                         // 0000000006BC: 2C34E372
  v_mac_f32     v26, v116, v115                         // 0000000006C0: 2C34E774
  v_mac_f32     v26, v118, v117                         // 0000000006C4: 2C34EB76
  v_mac_f32     v26, v120, v119                         // 0000000006C8: 2C34EF78
  v_mac_f32     v26, v122, v121                         // 0000000006CC: 2C34F37A
  v_mac_f32     v26, v124, v123                         // 0000000006D0: 2C34F77C
  v_mac_f32     v26, v126, v125                         // 0000000006D4: 2C34FB7E
  v_mac_f32     v26, v128, v127                         // 0000000006D8: 2C34FF80
  v_mac_f32     v26, v130, v129                         // 0000000006DC: 2C350382
  v_mac_f32     v26, v132, v131                         // 0000000006E0: 2C350784
  v_mac_f32     v26, v134, v133                         // 0000000006E4: 2C350B86
  v_mac_f32     v26, v136, v135                         // 0000000006E8: 2C350F88
  s_cbranch_vccnz  label_00F4                           // 0000000006EC: BF87FF38
  label_01BC:
  v_add_u32     v1, vcc, s11, v2                        // 0000000006F0: 3202040B
  v_mul_lo_u32  v1, v1, s4                              // 0000000006F4: D2850001 00000901
  v_add_u32     v0, vcc, s8, v0                         // 0000000006FC: 32000008
  v_add_u32     v0, vcc, s5, v0                         // 000000000700: 32000005
  s_ashr_i32    s0, s10, 31                             // 000000000704: 90009F0A
  v_add_u32     v0, vcc, v0, v1                         // 000000000708: 32000300
  v_ashrrev_i32  v1, 31, v0                             // 00000000070C: 2202009F
  v_add_u32     v0, vcc, s10, v0                        // 000000000710: 3200000A
  v_mov_b32     v2, s0                                  // 000000000714: 7E040200
  v_addc_u32    v1, vcc, v2, v1, vcc                    // 000000000718: 38020302
  v_lshlrev_b64  v[0:1], 2, v[0:1]                      // 00000000071C: D28F0000 00020082
  v_add_u32     v2, vcc, s2, v0                         // 000000000724: 32040002
  v_mov_b32     v0, s3                                  // 000000000728: 7E000203
  v_addc_u32    v3, vcc, v1, v0, vcc                    // 00000000072C: 38060101
  flat_store_dword  v[2:3], v26                         // 000000000730: DC700000 00001A02
  s_endpgm                                              // 000000000738: BF810000
end

AMD HSA Code Object End

